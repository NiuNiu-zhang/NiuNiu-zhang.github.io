<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>线程间同步互斥</title>
      <link href="/2020/08/08/%E7%BA%BF%E7%A8%8B%E9%97%B4%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/"/>
      <url>/2020/08/08/%E7%BA%BF%E7%A8%8B%E9%97%B4%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/</url>
      
        <content type="html"><![CDATA[<p>由于线程共享进程的资源和地址空间，因此在对资源操作时，必须考虑到线程间资源的访问和互斥问题<br>是</p>]]></content>
      
      
      <categories>
          
          <category> 进程线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线程通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程-linux</title>
      <link href="/2020/08/07/%E8%BF%9B%E7%A8%8B-linux/"/>
      <url>/2020/08/07/%E8%BF%9B%E7%A8%8B-linux/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络编程传输协议详解</title>
      <link href="/2020/08/07/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/08/07/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>诺瓦2020提前批笔试</title>
      <link href="/2020/08/07/%E8%AF%BA%E7%93%A62020%E6%8F%90%E5%89%8D%E6%89%B9%E7%AC%94%E8%AF%95/"/>
      <url>/2020/08/07/%E8%AF%BA%E7%93%A62020%E6%8F%90%E5%89%8D%E6%89%B9%E7%AC%94%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p> flight.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> HEAD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HEAD_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *     description:</span></span><br><span class="line"><span class="comment"> *     航班和乘客，乘客中用 GREEN、YELLOW、RED 标识身体情况， 规则:</span></span><br><span class="line"><span class="comment"> *     一列航班中 RED==0  没有问题</span></span><br><span class="line"><span class="comment"> *     RED &gt; 10%  紧急停机检查</span></span><br><span class="line"><span class="comment"> *     0 &lt; RED &lt;  10%</span></span><br><span class="line"><span class="comment"> *     有风险，抵达目的地后进行检查</span></span><br><span class="line"><span class="comment"> *     代码实现</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// &lt;封装 乘客struct&gt; select  链表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">passenger</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> * name;</span><br><span class="line">    <span class="keyword">char</span> * id_card;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">passenger</span> * <span class="title">pNext</span>;</span></span><br><span class="line">    <span class="keyword">int</span> flight_id;</span><br><span class="line">    <span class="keyword">int</span> healthcode; <span class="comment">// 乘客的健康等级</span></span><br><span class="line">&#125;<span class="keyword">passenger_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &lt;封装 flight struct&gt;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">flight</span>&#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> * orig_city;<span class="comment">//初始地</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> * dest_city;</span><br><span class="line">    <span class="keyword">int</span> flight_id;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">flight</span> * <span class="title">pNext</span>;</span></span><br><span class="line">    <span class="keyword">passenger_t</span> * pHead_passenger;   <span class="comment">//飞机包含乘客链表</span></span><br><span class="line">    <span class="keyword">int</span> Goodlevel;     <span class="comment">//评估飞机的安全等级</span></span><br><span class="line">    <span class="keyword">int</span> passengerNum;    <span class="comment">//保存航班的乘客总人数</span></span><br><span class="line">    <span class="keyword">int</span> redNum;        <span class="comment">//</span></span><br><span class="line">    <span class="keyword">int</span> yellowNum;</span><br><span class="line">&#125;<span class="keyword">flight_t</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span>  <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    EN_GREEN,</span><br><span class="line">    EN_YELLOW,</span><br><span class="line">    EN_RED</span><br><span class="line">&#125;en_health_code;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * function:create a flightHead</span></span><br><span class="line"><span class="comment"> * return:pHead_flight</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">flight_t</span> *  <span class="title">createFlight</span><span class="params">( <span class="keyword">void</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * function:create a  passengerHead</span></span><br><span class="line"><span class="comment"> * return:pHead_passenger</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">passenger_t</span> * <span class="title">createPassenger</span><span class="params">( <span class="keyword">void</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加航班信息</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addFlight</span><span class="params">(<span class="keyword">flight_t</span> * pHead,<span class="keyword">int</span> flight_id, <span class="keyword">const</span>  <span class="keyword">char</span> * orig_city, <span class="keyword">const</span> <span class="keyword">char</span> * dest_city )</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加乘客信息</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">addPassenger</span><span class="params">( <span class="keyword">flight_t</span> * pHead, <span class="keyword">int</span> flight_id, <span class="keyword">char</span> * name, <span class="keyword">char</span> * id_card, <span class="keyword">int</span> healthcode )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">showPassenger</span><span class="params">( <span class="keyword">flight_t</span> * pHead,<span class="keyword">int</span> flight_id )</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showFlight</span><span class="params">( <span class="keyword">flight_t</span> * pHead)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// function:计算某航班的风险值并返回</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRisk</span><span class="params">( <span class="keyword">flight_t</span> * pHead, <span class="keyword">int</span> flight_id )</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flight.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;flight.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">flight_t</span> * <span class="title">createFlight</span><span class="params">( <span class="keyword">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">flight_t</span> * pHead_flight = (<span class="keyword">flight_t</span> * )<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>( <span class="keyword">flight_t</span> ));</span><br><span class="line">    <span class="keyword">if</span> ( <span class="literal">NULL</span> == pHead_flight )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">flight_t</span> *)<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>( pHead_flight , <span class="string">&#x27;\0&#x27;</span> , <span class="keyword">sizeof</span>( <span class="keyword">flight_t</span> ) );</span><br><span class="line">    pHead_flight-&gt;flight_id = <span class="number">0</span>;</span><br><span class="line">    pHead_flight-&gt;pNext = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;create flight success\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> pHead_flight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">passenger_t</span> * <span class="title">createPassenger</span><span class="params">( <span class="keyword">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">passenger_t</span> * pHead_passenger = (<span class="keyword">passenger_t</span> * )<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>( <span class="keyword">passenger_t</span>));</span><br><span class="line">    <span class="keyword">if</span> ( <span class="literal">NULL</span> == pHead_passenger )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ( <span class="keyword">passenger_t</span> * )<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>( pHead_passenger , <span class="string">&#x27;\0&#x27;</span> , <span class="keyword">sizeof</span>( <span class="keyword">passenger_t</span> ) );</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;create passenger success\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> pHead_passenger;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addFlight</span><span class="params">( <span class="keyword">flight_t</span> * pHead, <span class="keyword">int</span> flight_id, <span class="keyword">const</span> <span class="keyword">char</span> * orig_city,  <span class="keyword">const</span> <span class="keyword">char</span> * dest_city )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="literal">NULL</span>==pHead || flight_id &lt; <span class="number">0</span> || <span class="literal">NULL</span> == orig_city || <span class="literal">NULL</span> == dest_city )</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;param error!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">flight_t</span> * temp = (<span class="keyword">flight_t</span> * )<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>(<span class="keyword">flight_t</span> ));</span><br><span class="line">    <span class="built_in">memset</span>(temp, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span>(<span class="keyword">flight_t</span> )  );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">flight_t</span> * pNew = (<span class="keyword">flight_t</span> * )<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>(<span class="keyword">flight_t</span> ));</span><br><span class="line">    <span class="built_in">memset</span>( pNew , <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span>(<span class="keyword">flight_t</span> )  );</span><br><span class="line">    <span class="comment">//不能对空指针进行赋值，  要新 malloc  pNew</span></span><br><span class="line">    pNew-&gt;flight_id = flight_id;</span><br><span class="line">    pNew-&gt;orig_city = orig_city;</span><br><span class="line">    pNew-&gt;dest_city = dest_city;</span><br><span class="line">    pNew-&gt;pHead_passenger =(<span class="keyword">passenger_t</span> *)<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>( <span class="keyword">passenger_t</span> ));</span><br><span class="line">    temp = pHead;</span><br><span class="line">    <span class="keyword">while</span>( temp-&gt;flight_id != flight_id &amp;&amp; temp-&gt;pNext != <span class="literal">NULL</span> ) <span class="comment">//对，应该判断前一个，然后赋值好赋值</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp =temp-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (temp !=  <span class="literal">NULL</span> &amp;&amp; temp-&gt;flight_id == flight_id )</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;flight  already  exist!, add error\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    temp-&gt;pNext=  pNew;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;add success\r\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showFlight</span><span class="params">( <span class="keyword">flight_t</span> * pHead)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>  ==pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;param error!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">flight_t</span>*  temp = pHead;</span><br><span class="line">    <span class="keyword">while</span>( temp != <span class="literal">NULL</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// flight_id=0是头节点，可不打印</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="number">0</span> == temp-&gt;flight_id )</span><br><span class="line">        &#123;</span><br><span class="line">            temp = temp-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;flight_id--%d  起始地点--%s,  目的地点--%s \r\n&quot;</span>,</span><br><span class="line">                temp-&gt;flight_id,</span><br><span class="line">                temp-&gt;orig_city,</span><br><span class="line">                temp-&gt;dest_city</span><br><span class="line">              );</span><br><span class="line">        temp = temp-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;show ok\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addPassenger</span><span class="params">(  <span class="keyword">flight_t</span> * pHead ,<span class="keyword">int</span> flight_id,  <span class="keyword">char</span> * name,</span></span></span><br><span class="line"><span class="function"><span class="params">         <span class="keyword">char</span> * id_card, <span class="keyword">int</span> healthcode )</span>    </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="literal">NULL</span> == pHead || flight_id &lt;<span class="number">0</span> || <span class="literal">NULL</span> == name || <span class="literal">NULL</span> == id_card )</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot; param error\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">flight_t</span> * ptmp = pHead;</span><br><span class="line">    <span class="keyword">while</span> ( ptmp-&gt;flight_id != flight_id   )</span><br><span class="line">    &#123;</span><br><span class="line">        ptmp = ptmp-&gt;pNext;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="literal">NULL</span> == ptmp) </span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot; flight_id error!\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">passenger_t</span> * pNew = ( <span class="keyword">passenger_t</span> *)<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>(<span class="keyword">passenger_t</span> ));</span><br><span class="line">    pNew-&gt;flight_id=flight_id;   <span class="comment">//0 green   1 yellow  2 red</span></span><br><span class="line">    pNew-&gt;healthcode=healthcode;</span><br><span class="line">    pNew-&gt;id_card = id_card;</span><br><span class="line">    pNew-&gt;name = name;</span><br><span class="line">    ptmp-&gt;passengerNum += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>( <span class="number">2</span> == healthcode  )</span><br><span class="line">    &#123;</span><br><span class="line">        ptmp-&gt;redNum += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( <span class="number">1</span> == healthcode )</span><br><span class="line">    &#123;</span><br><span class="line">        ptmp-&gt;yellowNum += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">passenger_t</span> * pq = ( <span class="keyword">passenger_t</span> *)<span class="built_in">malloc</span>( <span class="keyword">sizeof</span>(<span class="keyword">passenger_t</span> ));</span><br><span class="line">    pq = ptmp-&gt;pHead_passenger;</span><br><span class="line">    <span class="keyword">while</span>( pq-&gt;pNext != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pq = pq-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    pq-&gt;pNext = pNew;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">showPassenger</span><span class="params">( <span class="keyword">flight_t</span> * pHead,  <span class="keyword">int</span> flight_id )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="literal">NULL</span> == pHead || flight_id &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot; param error\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">flight_t</span> * temp = pHead;</span><br><span class="line">    <span class="comment">// 用temp-&gt;pNext 做判断最后好赋值</span></span><br><span class="line">    <span class="keyword">while</span>( temp-&gt;pNext != <span class="literal">NULL</span> &amp;&amp; temp-&gt;flight_id != flight_id )</span><br><span class="line">    &#123;</span><br><span class="line">        temp = temp-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (temp-&gt;flight_id != flight_id &amp;&amp; temp-&gt;pNext == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot; flight_id error!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (temp-&gt;flight_id == flight_id )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//passenger_t * pp = temp-&gt;pHead_passenger;  因为第一个是头节点，不打印</span></span><br><span class="line">        <span class="keyword">passenger_t</span>  * pp = temp-&gt;pHead_passenger-&gt;pNext;</span><br><span class="line">        <span class="keyword">while</span> ( pp != <span class="literal">NULL</span>)   <span class="comment">//遍历打印是   pp != NULL</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;passenger info:// name:%s,   card_id:%s,   healthcode:%d,  flight_id:%d,   origCity:%s,  destCity:%s \r\n&quot;</span>,</span><br><span class="line">                    pp-&gt;name,pp-&gt;id_card,pp-&gt;healthcode,pp-&gt;flight_id, temp-&gt;orig_city,temp-&gt;dest_city);</span><br><span class="line">            pp=pp-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;        </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRisk</span><span class="params">( <span class="keyword">flight_t</span> * pHead, <span class="keyword">int</span> flight_id )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="literal">NULL</span> == pHead || flight_id &lt; <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot; param error!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">flight_t</span> * ptemp = pHead;</span><br><span class="line">    <span class="keyword">while</span> ( ptemp-&gt;flight_id != flight_id &amp;&amp; ptemp-&gt;pNext != <span class="literal">NULL</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp = ptemp-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( ptemp-&gt;pNext == <span class="literal">NULL</span> &amp;&amp; ptemp-&gt;flight_id != flight_id)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">float</span> redRisk =(<span class="keyword">float</span>)ptemp-&gt;redNum / (<span class="keyword">float</span>)ptemp-&gt;passengerNum;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;passengerNum=%d, redNum=%d, yellowNum=%d\r\n&quot;</span>,ptemp-&gt;passengerNum,ptemp-&gt;redNum, ptemp-&gt;yellowNum);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;redRisk=%f\r\n&quot;</span>, redRisk);</span><br><span class="line">    <span class="keyword">if</span>( <span class="number">0</span> == redRisk)</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp-&gt;Goodlevel = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;plane safe, take off\r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( redRisk &gt;= <span class="number">0.1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp-&gt;Goodlevel = <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;dangerous!!!!stop \r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( redRisk &gt; <span class="number">0</span> &amp;&amp; redRisk &lt; <span class="number">0.1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        ptemp-&gt;Goodlevel = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">&quot;just ok,but still need to be examine\r\n&quot;</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">                                                                                                                                                                        </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;flight.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">flight_t</span> * pHead_flight = createFlight();</span><br><span class="line">    <span class="keyword">passenger_t</span> * pHead_passenger = createPassenger();</span><br><span class="line">    addFlight(pHead_flight, <span class="number">1</span>, <span class="string">&quot;zhengzhou&quot;</span>,<span class="string">&quot;xian&quot;</span>);</span><br><span class="line">    addFlight(pHead_flight, <span class="number">2</span>, <span class="string">&quot;beijing&quot;</span>,<span class="string">&quot;xian&quot;</span>);</span><br><span class="line">    <span class="comment">//addFlight(pHead_flight, 2, &quot;xinjiang&quot;,&quot;xian&quot;);</span></span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;Jim&quot;</span>, <span class="string">&quot;12345&quot;</span>,<span class="number">0</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;SU&quot;</span>,  <span class="string">&quot;sadw&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;zhang&quot;</span>,<span class="string">&quot;334&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;li&quot;</span>,   <span class="string">&quot;888&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;q&quot;</span>,    <span class="string">&quot;812&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;s&quot;</span>,    <span class="string">&quot;833&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;qwd&quot;</span>,  <span class="string">&quot;124&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;trgh&quot;</span>, <span class="string">&quot;oa9&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;dwew&quot;</span>, <span class="string">&quot;wevc&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">1</span>,<span class="string">&quot;uh&quot;</span>,   <span class="string">&quot;okn&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;sfd&quot;</span>,    <span class="string">&quot;plm&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;yth&quot;</span>,    <span class="string">&quot;adv&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;sf&quot;</span>,    <span class="string">&quot;okq&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;alib&quot;</span>,    <span class="string">&quot;13df&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;niuniu&quot;</span>,<span class="string">&quot;asf3&quot;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;gui&quot;</span>,  <span class="string">&quot;qa1&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;ww&quot;</span>,    <span class="string">&quot;qa2&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;gg&quot;</span>,    <span class="string">&quot;qa3&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;ym&quot;</span>,    <span class="string">&quot;qa4&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;shui&quot;</span>,    <span class="string">&quot;qa5&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;alp&quot;</span>,    <span class="string">&quot;ws5&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    addPassenger(pHead_flight,<span class="number">2</span>,<span class="string">&quot;hub&quot;</span>,    <span class="string">&quot;sf6&quot;</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    getRisk( pHead_flight, <span class="number">1</span>);</span><br><span class="line">    getRisk( pHead_flight, <span class="number">2</span>);</span><br><span class="line">    showFlight( pHead_flight );</span><br><span class="line">    showPassenger(pHead_flight,  <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行效果参考：<br><img src="/images/flight.png"><br><img src="/NiuNiu-zhang/NiuNiu-zhang.github/blog\source\images\flight.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线程-linux</title>
      <link href="/2020/08/05/%E7%BA%BF%E7%A8%8B-linux/"/>
      <url>/2020/08/05/%E7%BA%BF%E7%A8%8B-linux/</url>
      
        <content type="html"><![CDATA[<h4 id="线程–轻量级进程-内核调度的最小单元"><a href="#线程–轻量级进程-内核调度的最小单元" class="headerlink" title="线程–轻量级进程   //  内核调度的最小单元"></a>线程–轻量级进程   //  内核调度的最小单元</h4><p>为了进一步减少处理器的空转时间，支持多处理器，减少上下文切换开销</p><p>上下文切换：指的是内核（操作系统的核心）在CPU上对进程或者线程进行切换，上下文切换过程中的信息被保存在进程控制块（PCB-Process Control Block）中</p><p>过程：</p><p>`</p><pre><code>[1]先挂起一个进程，把这个进程在cpu中的状态（上下文信息）存储在内存的 PCB 中[2]在PCB中检索下一个进程的上下文并将其在CPU的寄存器中恢复[3]跳转到程序计数器所指向的位置（即跳转到进程被中断时的代码行）并恢复该进程`</code></pre><p>linux中的线程依赖于  pthread 线程库</p><p>1、创建线程： <code>pthread_create( pthread_t  * thread, pthread_attr_t *attr,void *( *start_routine)(void *), void * arg);</code></p><p>thread:    线程标识符</p><p>attr: 线程属性设置，  NULL 表示缺省属性</p><p>start_routine: 线程执行函数，参数和返回值都是 void *</p><p>arg: 传递给 线程执行函数用的参数</p><p>return:  success:0   error:错误码    </p><p>2、退出线程: <code> pthread_exit( void * retval );</code></p><p>retval: 线程结束时的返回值， 可以通过 pthread_join() 来接收<br>//但是使用中不能用 exit 退出线程，因为一般一个进程中包含多个线程，exit的作用是使当前进程终止，进程中所以线程都会over—<br>所以退出线程用 pthread_exit() 来替代</p><p>线程主动结束：可以调用 pthread_exit()</p><p>一个线程终止另外一个线程： 调用  pthread_cancel() 实现<br>// 在被取消的线程内部要  先调用 pthread_setcancel() 和 pthread_setcanceltype() 设置相应的取消状态</p><p>3、pthread_join()  以阻塞的方式等待 thread 指定的线程结束，函数返回时，被等待线程的资源被回收，如果线程已经结束，该函数会立即返回</p><p>resutn: success:0   error:错误号</p><p>函数原型：<code> pthread_ioin( pthread_t pthread, void ** thread_result );</code></p><p>thread:被等待线程的标识符</p><p>thread_result: 用户定义的指针，用来接收被等待线程结束时的返回值（如果返回不为NULL）</p><p>**<br>为什么是二级指针：**原因：一级指针只能用来改变指向内存的值，传递的就是指针p内存的地址,所以修改它就是修改了它自己的指向;</p><p>4、<code>pthread_cancel( pthread_t thread )</code></p><p>thread: 要取消的线程的 标识符</p><p>return:  success:0    error:错误码</p><p>线程函数使用 Demo<br> // 编译的时候需要链接 pthread</p><p>thread.h</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;stdlib.h&gt;</p><p>#include &lt;pthread.h&gt;</p><p>#define THREAD_NUM 3     // 线程数</p><p>#define REPEAT_TIMES 5 //每个线程中的循环次数限制</p><p>#define DELAY_TIME  6.0  //循环之间的最大时间间隔</p><p>线程处理函数</p><p>void * thread_function( void * arg)<br>{</p><pre><code>int thread_num = (int )arg;  //线程总数int delay_time = 0;   //延时int count = 0;        //计调用次数printf(&quot;thread %d start!\r\n&quot;,thread_num);for (count=0;count&lt;REPEAT_TIMES; count++ )&#123;    delay_time = (int)( rand() * DELAY_TIME / (RAND_MAX) ) +1 ;    sleep( delay_time );   //随机等待1--6 s, 模拟任务完成的时间随机    printf(&quot;Thread %d :job %d delay = %d\r\n&quot;, thread_num,count, delay_time);&#125;printf(&quot;Thread %d is finished\r\n&quot;, thread_num);pthread_exit(NULL);   //任务完成自行结束</code></pre><p>}</p><p>main.c</p><p>#include “thread.h”</p><p>int main( void )<br>{</p><pre><code>pthread_t thread[THREAD_NUM];  //定义存放 thread 号的类型数组int no = 0,res;void * thread_ret;srand( time( NULL ));   //埋下时间种子for( no=0; no&lt;THREAD_NUM; no++)&#123;    res = pthread_create(&amp;thread[no], NULL, thread_function, (void*)no );  //创建的时候是  pthread_t *    // no 标识是第几个线程    if ( res != 0 )  //create error    &#123;        printf(&quot;Create thread %d error\r\n&quot;, no);        exit(res);  // 结束进程， &lt;stdlib.h&gt; 参数不为0都异常    &#125;&#125;printf(&quot;Create threads success!\r\n&quot;);for( no=0;no&lt;THREAD_NUM;no++)&#123;    // pthread_join:  pthread_t thread    res = pthread_join( thread[no], &amp;thread_ret);   //阻塞式等待线程退出    //param_2  被等待线程结束的返回值,  void ** thread_result    if ( 0 == res ) //success:0   error:错误号    &#123;        printf(&quot;Thread %d joined\r\n&quot;,no);    &#125;    else    &#123;        printf(&quot;Thread %d joined failed\r\n&quot;, no);    &#125;&#125;return 0;</code></pre><p>}</p><p>运行情况：<br><img src="/images/pthread.png"></p>]]></content>
      
      
      <categories>
          
          <category> 多进程/线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进制间转换</title>
      <link href="/2020/08/04/%E8%BF%9B%E5%88%B6%E9%97%B4%E8%BD%AC%E6%8D%A2/"/>
      <url>/2020/08/04/%E8%BF%9B%E5%88%B6%E9%97%B4%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>&lt;10进制—&gt;2进制&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ex:  <span class="number">19</span>---&gt; </span><br><span class="line">    <span class="number">19</span> / <span class="number">2</span> = <span class="number">9.</span>..<span class="number">.1</span></span><br><span class="line">    <span class="number">9</span> / <span class="number">2</span>  = <span class="number">4.</span>..<span class="number">.1</span></span><br><span class="line">    <span class="number">4</span> / <span class="number">2</span>  = <span class="number">2.</span>..<span class="number">.0</span></span><br><span class="line">    <span class="number">2</span> / <span class="number">2</span>  = <span class="number">1.</span>..<span class="number">.0</span></span><br><span class="line">    <span class="number">1</span> / <span class="number">2</span>  = <span class="number">0.</span>..<span class="number">.1</span></span><br><span class="line">    反序取余数   <span class="number">10011</span></span><br></pre></td></tr></table></figure><p><img src="/images/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2.jpg"></p><p><img src="/NiuNiu-zhang/NiuNiu-zhang.github/blog\source\images\进制转换.jpg"></p><p>10进制中的 小数部分–&gt;2进制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ex: <span class="number">0.75</span></span><br><span class="line">小数不断×<span class="number">2</span>取整，直到没有小数为止，注意:不是所有的小数都可以转为 <span class="number">2</span> 进制</span><br><span class="line">    <span class="number">0.75</span> * <span class="number">2</span> = <span class="number">1.5</span> 取整 <span class="number">1</span></span><br><span class="line">    <span class="number">0.5</span> * <span class="number">2</span> = <span class="number">1</span>  顺序取数得:  <span class="number">0.11</span></span><br></pre></td></tr></table></figure><p>&lt;16进制—-&gt; 10进制 &gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span>进制 是 <span class="number">16</span> 进 <span class="number">1</span>   </span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> A(<span class="number">10</span>) <span class="function">B C D E <span class="title">F</span><span class="params">(<span class="number">15</span>)</span></span></span><br><span class="line"><span class="function">ex: 2AF5</span></span><br><span class="line"><span class="function">    </span>= <span class="number">5</span>* <span class="number">16</span>^<span class="number">0</span>  +  F*<span class="number">16</span>^<span class="number">1</span>  +  A*<span class="number">16</span>^<span class="number">2</span>  + <span class="number">2</span>*<span class="number">16</span>^<span class="number">3</span></span><br><span class="line">    = <span class="number">5</span>  +  <span class="number">15</span>*<span class="number">16</span>  +  <span class="number">10</span>*<span class="number">256</span> + <span class="number">2</span>*<span class="number">4096</span></span><br><span class="line">    = <span class="number">5</span>  +  <span class="number">240</span>    +  <span class="number">2560</span>   + <span class="number">8192</span></span><br><span class="line">    = <span class="number">10997</span></span><br></pre></td></tr></table></figure><p>&lt;10进制 —-&gt;  16进制&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">余数定理分解</span><br><span class="line">ex：  <span class="number">4877</span></span><br><span class="line"><span class="number">4877</span> / <span class="number">16</span> = <span class="number">304.</span>..<span class="number">.13</span></span><br><span class="line">    <span class="number">304</span> / <span class="number">16</span> = <span class="number">19.</span>..<span class="number">.0</span></span><br><span class="line">    <span class="number">19</span> / <span class="number">16</span>  = <span class="number">1.</span>...<span class="number">.3</span></span><br><span class="line">    <span class="number">1</span> / <span class="number">16</span>   = <span class="number">0.</span>...<span class="number">.1</span></span><br><span class="line">    结果 =  <span class="number">130</span>D   (注意顺序)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32-port1</title>
      <link href="/2020/08/04/stm32-port1/"/>
      <url>/2020/08/04/stm32-port1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/03/hello-world/"/>
      <url>/2020/08/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 NiuNiu 的技术经验分享博客网站<br>但凡流行的工具、技术，都是入门易，精通难，想有所成就，<br>都需要不懈的努力和漫长的积累，愿诸君与我共勉！<br>不缺拳打世界的勇气<br>亦有归去风雨无晴的洒脱，<del>~</del><br>-Z</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单向不循环链表</title>
      <link href="/2020/08/02/%E5%8D%95%E5%90%91%E4%B8%8D%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8/"/>
      <url>/2020/08/02/%E5%8D%95%E5%90%91%E4%B8%8D%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>链表：</p><p>动态的数据结构，分为数据域和指针域， 动态进行存储分配，实现数据增删</p><p>优点：</p><p>​        1、存储空间动态分配，可以根据实际需要使用</p><p>​        2、不需要地址连续的存储空间</p><p>​        3、插入/删除操作只需通过修改指针实现，不必移动数据元素， 操作时间效率高 ，插入删除事件复杂度 O(1)</p><p>缺点：</p><p>​        1、每个链节点需要设置指针域（ 存储密度小 ）</p><p>​        2、是一种非随机存储结构，查找/定位等操作都需要顺序扫描链表实现，时间效率低 O(n)</p><p>[TOC]</p><h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    头节点:数据域为空</span></span><br><span class="line"><span class="comment">    头节点:数据域为空</span></span><br><span class="line"><span class="comment">    malloc 申请    &lt;malloc.h&gt;</span></span><br><span class="line"><span class="comment">    memset 初始化  &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span>  <span class="keyword">int</span>  datatype;    </span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">link</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">link</span> * <span class="title">pNext</span>;</span></span><br><span class="line">&#125;Link;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 枚举   中间用,    未赋值默认第一个为0</span></span><br><span class="line"><span class="keyword">enum</span> opt</span><br><span class="line">&#123;</span><br><span class="line">    ERR=<span class="number">-1</span>,</span><br><span class="line">    OK,</span><br><span class="line">    TAIL=<span class="number">-1</span>,</span><br><span class="line">    HEAD,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// [1]创建链表---即生成头节点</span></span><br><span class="line"></span><br><span class="line"><span class="function">Link * <span class="title">createLink</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function">Link * <span class="title">createLink</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Link * pHead =<span class="literal">NULL</span>;</span><br><span class="line">    pHead=(Link *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Link));</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pHead)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">memset</span>(pHead,<span class="string">&#x27;\0&#x27;</span>,<span class="keyword">sizeof</span>(Link));</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [2]插入节点---头插，尾插，中间插</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据位置给链表添加节点</span></span><br><span class="line"><span class="comment">//参数：链表首地址，要添加的元素，和插入的位置</span></span><br><span class="line"><span class="comment">//HEAD=0 TAIL=-1  其他中间</span></span><br><span class="line"><span class="comment">//返回值   成功 OK 失败 ERR</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InsertLink</span><span class="params">(Link * pHead, datatype item,<span class="keyword">int</span> offset)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InsertLink</span><span class="params">(Link * pHead, datatype item,<span class="keyword">int</span> offset)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    Link * pNew=<span class="literal">NULL</span>;</span><br><span class="line">    Link * pTmp=pHead;  <span class="comment">//如果写pHead-&gt;pNext要判断是否为空所以为了方便写pHead</span></span><br><span class="line">    pNew=(Link *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Link));</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pNew)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pNew-&gt;data=item;</span><br><span class="line">    pNew-&gt;pNext=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(offset)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">case</span> HEAD:</span><br><span class="line">        pNew-&gt;pNext=pHead-&gt;pNext;</span><br><span class="line">        pHead-&gt;pNext=pNew;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> TAIL:</span><br><span class="line">        <span class="keyword">while</span>(pTmp-&gt;pNext!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            pTmp=pTmp-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">        pTmp-&gt;pNext=pNew;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">while</span>(k &lt; offset<span class="number">-1</span> &amp;&amp; pTmp != <span class="literal">NULL</span>) <span class="comment">//pTmp!=NULL说明找到插入位置，如果pTmp==NULL,表示未找到要free(pNew)再返回报错</span></span><br><span class="line">        &#123;</span><br><span class="line">            k++;</span><br><span class="line">            pTmp=pTmp-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pTmp==<span class="literal">NULL</span>) <span class="comment">//先判断是否为空</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">free</span>(pNew);</span><br><span class="line">            <span class="keyword">return</span> ERR;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        pNew-&gt;pNext=pTmp-&gt;pNext;</span><br><span class="line">        pTmp-&gt;pNext=pNew;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [3]打印输出---遍历</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">show</span><span class="params">(Link * pHead)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">show</span><span class="params">(Link * pHead)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR;</span><br><span class="line">    &#125;</span><br><span class="line">    Link * pTmp=pHead-&gt;pNext;</span><br><span class="line">    <span class="keyword">while</span>(pTmp!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d &quot;</span>,pTmp-&gt;data);</span><br><span class="line">        pTmp=pTmp-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [4]删除节点----头删，尾删，中间删</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DeleteLink</span><span class="params">(Link * pHead,<span class="keyword">int</span> offset,datatype * pData)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DeleteLink</span><span class="params">(Link * pHead,<span class="keyword">int</span> offset,datatype * pData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pHead||<span class="literal">NULL</span>==pData)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR;</span><br><span class="line">    &#125;</span><br><span class="line">    Link * pDel=<span class="literal">NULL</span>;</span><br><span class="line">    Link * pPre=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">switch</span>(offset)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> HEAD:</span><br><span class="line">        pDel=pHead-&gt;pNext;</span><br><span class="line">        <span class="keyword">if</span>(pDel==<span class="literal">NULL</span>)          <span class="comment">//一定要判断</span></span><br><span class="line">        &#123;</span><br><span class="line">            *pData=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;链表为空！\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> ERR;</span><br><span class="line">        &#125;</span><br><span class="line">        pHead-&gt;pNext=pDel-&gt;pNext;</span><br><span class="line">        <span class="comment">//先将删除的数保存</span></span><br><span class="line">        *pData=pDel-&gt;data;</span><br><span class="line">        <span class="built_in">free</span>(pDel);</span><br><span class="line">        pDel=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> TAIL:</span><br><span class="line">        pPre=pHead;</span><br><span class="line">        pDel=pHead-&gt;pNext;</span><br><span class="line">        <span class="keyword">if</span>(pDel==<span class="literal">NULL</span>)   <span class="comment">//说明没有什么删除的，空链表是pHead-&gt;pNext为空</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;链表为空!\n&quot;</span>);</span><br><span class="line">            *pData=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> ERR;</span><br><span class="line">            <span class="keyword">while</span>(pDel-&gt;pNext!=<span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                pPre=pDel;</span><br><span class="line">                pDel=pDel-&gt;pNext;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//保存删除的数据v</span></span><br><span class="line">             *pData=pDel-&gt;data;</span><br><span class="line"></span><br><span class="line">             <span class="built_in">free</span>(pDel);</span><br><span class="line">             pDel=<span class="literal">NULL</span>;</span><br><span class="line">             <span class="comment">//把pre变成尾节点</span></span><br><span class="line">             pPre-&gt;pNext=<span class="literal">NULL</span>;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        pPre=pHead;</span><br><span class="line">        pDel=pHead-&gt;pNext;</span><br><span class="line">        k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(k&lt;offset<span class="number">-1</span>&amp;&amp;pDel!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            k++;</span><br><span class="line">            pPre=pDel;          <span class="comment">//是pPre=pDel;;</span></span><br><span class="line">            pDel=pDel-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pDel==<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;链表为空!\n&quot;</span>);</span><br><span class="line">            *pData=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> ERR;</span><br><span class="line">        &#125;</span><br><span class="line">        *pData=pDel-&gt;data;</span><br><span class="line">        pPre-&gt;pNext=pDel-&gt;pNext;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">free</span>(pDel);</span><br><span class="line">        pDel=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [5]销毁链表</span></span><br><span class="line"></span><br><span class="line"><span class="function">Link * <span class="title">Destroy</span><span class="params">(Link * pHead)</span></span>;</span><br><span class="line"><span class="function">Link * <span class="title">Destroy</span><span class="params">(Link * pHead)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Link * pDel=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//while(pDel!=NULL)                  //while(1)是死循环  永远成立；</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;<span class="comment">//找到链表中的首节点</span></span><br><span class="line">        pDel=pHead-&gt;pNext;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(pDel==<span class="literal">NULL</span>)</span><br><span class="line">        &#123;    </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保护好首节点后的所有节点</span></span><br><span class="line">        pHead-&gt;pNext=pDel-&gt;pNext;</span><br><span class="line">        <span class="comment">//释放首节点</span></span><br><span class="line">        <span class="built_in">free</span>(pDel);</span><br><span class="line">        pDel=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//最后再释放头节点</span></span><br><span class="line">        <span class="built_in">free</span>(pHead);</span><br><span class="line">        pHead=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表已删除\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> pHead;   <span class="comment">//一定要返回  pHead  否则会错误</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [6]链表逆序---拓展</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Negative</span><span class="params">(Link * pHead)</span></span>;    <span class="comment">//Negative sequence  逆序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Negative</span><span class="params">(Link * pHead)</span>    <span class="comment">//Negative sequence  逆序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ERR;</span><br><span class="line">    &#125;</span><br><span class="line">    Link * pA=<span class="literal">NULL</span>;</span><br><span class="line">    Link * pB=<span class="literal">NULL</span>;</span><br><span class="line">    pA=pHead-&gt;pNext;   <span class="comment">//保护好头节点后的所有节点</span></span><br><span class="line">    <span class="comment">//原链表变为空链表</span></span><br><span class="line">    pHead-&gt;pNext=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//保护好首节点后的所有节点</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pB=pA-&gt;pNext;</span><br><span class="line">        <span class="comment">//首节点插入到新链表</span></span><br><span class="line">        pA-&gt;pNext=pHead-&gt;pNext;</span><br><span class="line">        pHead-&gt;pNext=pA;</span><br><span class="line">        pA=pB;</span><br><span class="line">        <span class="keyword">if</span>(pA==<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="test"><a href="#test" class="headerlink" title="test"></a>test</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>int main()</code></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
